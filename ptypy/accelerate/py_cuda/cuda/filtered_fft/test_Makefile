NVCC = nvcc
NVCC_FLAGS += -dc -arch=sm_60 \
	-gencode=arch=compute_30,code=sm_30 \
	-gencode=arch=compute_50,code=sm_50 \
	-gencode=arch=compute_52,code=sm_52 \
	-gencode=arch=compute_60,code=sm_60 \
	-gencode=arch=compute_61,code=sm_61 \
	-gencode=arch=compute_70,code=sm_70 \
	-gencode=arch=compute_70,code=compute_70
CUDADIR = $(dir $(shell which nvcc) )/..

INCLUDES = $(shell python -m pybind11 --includes) -I$(CUDADIR)/include
PYMODEXT = $(shell python-config --extension-suffix)
CPPFLAGS += -DMY_FFT_ROWS=128 -DMY_FFT_COLS=128 $(INCLUDES)
OPTFLAGS = -O3  -std=c++14
CXXFLAGS += -fPIC
LD_FLAGS += -L$(CUDADIR)/lib64 -lcufft_static -lculibos -cudart shared -ldl -lrt -lpthread
OBJ = filtered_fft.o 
OBJ_MOD = module.o 
OBJ_EXE = smoke_test.o
MODULE = filtered_fft$(PYMODEXT)
EXE = smoke_test

all: $(MODULE) $(EXE)

python: $(MODULE)

clean:
	rm -rf $(OBJ) $(EXE) $(MODULE) $(OBJ_EXE) $(OBJ_MOD)

%.o: %.cu
	$(NVCC) $(NVCC_FLAGS) $(OPTFLAGS) -Xcompiler "$(CXXFLAGS)" $(CPPFLAGS) -c $< -o $@

%.o: %.cpp
	$(NVCC) $(NVCC_FLAGS) -x cu $(OPTFLAGS) -Xcompiler "$(CXXFLAGS)" $(CPPFLAGS) -c $< -o $@

$(MODULE): $(OBJ) $(OBJ_MOD)
	$(NVCC) $(OPTFLAGS) -shared $(LD_FLAGS) $(OBJ) $(OBJ_MOD) -o $@

$(EXE): $(OBJ) $(OBJ_EXE)
	$(NVCC) $(OPTFLAGS) -o $@ $(LD_FLAGS) $(OBJ) $(OBJ_EXE)

$(OBJ) $(OBJ_EXE) $(OBJ_MOD): errors.h filtered_fft.h